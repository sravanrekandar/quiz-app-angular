Rest Calls
===================
Login:
POST /login HTTP/1.1
username: admin
password: admin

Register:
POST /register HTTP/1.1
username: admin
password: admin
mailId: sravanrekandar@gmail.com

Pages/Routes
===================
--Home/Login: '#home/'
	Display links 'login' and 'register'
	Display 'login' as active
	Actions:
	On-click 'login' link : redirect to login page (default)
	On-click 'register' link: redirect to register page
--Home/login
	Display Form
--Home/register
	Display Form
--Quiz
	Display logged-in user info
	Display logout button
	Display Instructions
	Display continue Button
	Display question status chart: There should be n number of buttons indicating the n number of questions.
	Display timer.
	Actions:
	on-click: logout, redirect to login page
	on-click: 
			-- 'continue' button, redirect to first question
			-- Kick off timer	
	on-click: button of nth question: redirect to nth question

--Quiz/question/:question-id
	Display question
	Display answer form
	Display 'Submit and continue to Next Question' button
	Display 'Previous question' button
	
Controllers
===================
--Home/LoginCtrl
	1) Validate Login form, send the data through 'LoginSvc'
	2) Respond to login authentication failure : display error messages
	3) Respond to login authentication success : Redirect to Instructions Page
	4) Validate register form, send the data through 'loginSvc'
	5) Respond to register authentication failure : display error messages
	6) Respond to register authentication success : Display Success message, Redirect to login page

Service
====================
--LoginSvc: communicates with the server


Feature: localStorage for user login

